{"version":3,"file":"static/js/425.9497ce92.chunk.js","mappings":"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","sources":["Fetch.jsx","webpack://react-homework-template/./src/components/movieItem/MovieItem.module.css?7af4","components/movieItem/MovieItem.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://react-homework-template/./src/pages/movies/Movies.module.css?c186","pages/movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'b889b1f15800992b1379ee4939d9484c';\n\nexport const getTrendingMovies = async () => {\n  const query = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(query);\n  return movies;\n};\n\nexport const searchMovies = async searchParam => {\n  const query = `search/movie?api_key=${KEY}&page=1&query=${searchParam}`;\n  const { data: movies } = await axios.get(query);\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const query = `movie/${movieId}$?api_key=${KEY}`;\n  const { data: movie } = await axios.get(query);\n  return movie;\n};\n\nexport const getMovieCast = async movieId => {\n  const query = `movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(query);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const query = `movie/${movieId}/reviews?api_key=${KEY}`;\n  const { data } = await axios.get(query);\n  return data;\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieItem_list__MeWSv\",\"link\":\"MovieItem_link__cm55f\",\"img\":\"MovieItem_img__2wMcO\",\"movieName\":\"MovieItem_movieName__m9q6q\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport noImg from '..//..//images/No_image.jpg';\nimport css from './MovieItem.module.css';\n\nconst MovieItem = ({ id, title, poster_path, location }) => {\n  return (\n    <li className={css.list} key={id} id={id}>\n      <Link\n        className={css.link}\n        to={{\n          pathname: `/movies/${id}`,\n          state: {\n            from: {\n              location,\n            },\n          },\n        }}\n      >\n        <img\n          className={css.img}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : noImg\n          }\n          alt=\"poster\"\n          width=\"\"\n          height=\"\"\n        />\n        <p className={css.movieName}>{title}</p>\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"moviesTitle\":\"Movies_moviesTitle__UGoZf\",\"searchForm\":\"Movies_searchForm__RjJqH\",\"searchInput\":\"Movies_searchInput__mxayf\",\"searchButton\":\"Movies_searchButton__cozX1\",\"link\":\"Movies_link__XMa7X\",\"moviesList\":\"Movies_moviesList__xFw9Z\",\"list\":\"Movies_list__nhUXd\",\"img\":\"Movies_img__kWorT\",\"movieName\":\"Movies_movieName__8e4or\"};","import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { searchMovies } from '../../Fetch.jsx';\nimport noImg from '..//..//images/No_image.jpg';\nimport MovieItem from 'components/movieItem/MovieItem';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchMovie, setSearchMovie] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  const history = useNavigate();\n\n  useEffect(() => {\n    const searchString = new URLSearchParams(location.search).get('query');\n\n    if (searchString) {\n      const getMovies = async () => {\n        const { results } = await searchMovies(searchString);\n\n        setMovies(results);\n        setSearchMovie(searchString);\n      };\n\n      getMovies();\n    }\n  }, [location.search]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (searchMovie.trim()) {\n      const { results } = await searchMovies(searchMovie);\n\n      setMovies(results);\n      setSearchMovie('');\n\n      if (results.length === 0) {\n        window.alert('We do not have such movie');\n      }\n\n      history({\n        ...location,\n        search: `query=${searchMovie}`,\n      });\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <form className={css.searchForm} onSubmit={handleSubmit}>\n          <input\n            onChange={e => setSearchMovie(e.target.value)}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n            value={searchMovie}\n            className={css.searchInput}\n          />\n          <button className={css.searchButton} type=\"submit\">\n            &#128269;\n          </button>\n        </form>\n      </header>\n      <ul className={css.moviesList}>\n        {movies.length > 0 &&\n          movies.map(({ id, title, poster_path }) => (\n            <MovieItem\n              key={id}\n              id={id}\n              title={title}\n              posterPath={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : noImg}\n                                                       \n              // posterPath={poster_path || noImg} // Use noImg as fallback if poster_path is not available\n              location={location}\n            />\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n\n// import { useState, useEffect } from 'react';\n// import { Link, useLocation, useNavigate } from 'react-router-dom';\n// import { searchMovies } from '../../Fetch.jsx';\n// import noImg from '..//..//images/No_image.jpg';\n// import css from './Movies.module.css';\n\n// export default function Movies() {\n// const [searchMovie, setSearchMovie] = useState('');\n// const [movies, setMovies] = useState([]);\n\n// const location = useLocation();\n// const history = useNavigate();\n\n// useEffect(() => {\n//     const searchString = new URLSearchParams(location.search).get('query');\n\n//     if (searchString) {\n//         const getMovies = async () => {\n//             const { results } = await searchMovies(searchString);\n\n//             setMovies(results);\n//             setSearchMovie(searchString);\n\n//         };\n\n//         getMovies();\n//     }\n// }, [location.search]);\n\n// const handleSubmit = async e => {\n//     e.preventDefault();\n\n//     if (searchMovie.trim()) {\n//         const { results } = await searchMovies(searchMovie);\n\n//         setMovies(results);\n//         setSearchMovie('');\n\n//         if (results.length === 0) {\n//             window.alert ('We have not such films');\n//         }\n\n//         history({\n//             ...location,\n//             search: `query=${searchMovie}`,\n//         });\n//     }\n// };\n\n// return (\n//   <>\n//     <header>\n//       <form className={css.searchForm} onSubmit={handleSubmit}>\n//         <input\n//           onChange={e => setSearchMovie(e.target.value)}\n//           type=\"text\"\n//           autoComplete=\"off\"\n//           autoFocus\n//           placeholder=\"Search movie\"\n//           value={searchMovie}\n//           className={css.searchInput}\n//         />\n//         <button className={css.searchButton} type=\"submit\">\n//           &#128269;\n//         </button>\n//       </form>\n//     </header>\n//     <ul className={css.moviesList}>\n//       {movies.length > 0 &&\n//         movies.map(({ id, title, poster_path }) => (\n//           <li className={css.list} key={id} id={id}>\n//             <Link className={css.link}\n//               to={{\n//                 pathname: `/movies/${`${id}`}`,\n//                 state: {\n//                   from: {\n//                     location,\n//                   },\n//                 },\n//               }}\n//             >\n//               <img\n//                 className={css.img}\n//                 src={\n//                   poster_path\n//                     ? `https://image.tmdb.org/t/p/w500${poster_path}`\n//                     : noImg\n//                 }\n//                 alt=\"poster\"\n//                 width=\"\"\n//                 height=\"\"\n//               />\n//               <p className={css.movieName}>{title}</p>\n//             </Link>\n//           </li>\n//         ))}\n//     </ul>\n//   </>\n// );\n// };\n\n// export default function Movies() {\n//   return (\n//     <>\n//       <h2 className={css.moviesTitle}>Movies</h2>;\n//     </>\n//   );\n// }\n"],"names":["axios","KEY","getTrendingMovies","query","movies","data","searchMovies","searchParam","getMovieDetails","movieId","movie","getMovieCast","getReviews","id","title","poster_path","location","className","css","to","pathname","state","from","src","noImg","alt","width","height","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","useState","searchMovie","setSearchMovie","setMovies","useLocation","history","useNavigate","useEffect","searchString","URLSearchParams","search","get","getMovies","results","handleSubmit","e","preventDefault","trim","window","alert","onSubmit","onChange","type","autoComplete","autoFocus","placeholder","map","MovieItem","posterPath"],"sourceRoot":""}