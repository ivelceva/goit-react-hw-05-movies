{"version":3,"file":"static/js/577.a5a654fb.chunk.js","mappings":"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","sources":["Fetch.jsx","webpack://react-homework-template/./src/components/movieList/MovieList.module.css?db32","components/movieList/MovieList.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://react-homework-template/./src/components/searchForm/SearchForm.module.css?1aef","components/searchForm/SearchForm.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'b889b1f15800992b1379ee4939d9484c';\n\nexport const getTrendingMovies = async () => {\n  const query = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(query);\n  return movies;\n};\n\nexport const searchMovies = async searchParam => {\n  const query = `search/movie?api_key=${KEY}&page=1&query=${searchParam}`;\n  const { data: movies } = await axios.get(query);\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const query = `movie/${movieId}$?api_key=${KEY}`;\n  const { data: movie } = await axios.get(query);\n  return movie;\n};\n\nexport const getMovieCast = async movieId => {\n  const query = `movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(query);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const query = `movie/${movieId}/reviews?api_key=${KEY}`;\n  const { data } = await axios.get(query);\n  return data;\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MovieList_moviesList__YUmyH\",\"list\":\"MovieList_list__3qPgi\",\"link\":\"MovieList_link__-y3uU\",\"img\":\"MovieList_img__p2OKV\",\"movieName\":\"MovieList_movieName__m8+kT\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport noImg from '..//..//images/No_image.jpg';\nimport css from './MovieList.module.css';\n\nexport default function MovieList({ movies, location }) {\n  return (\n    <ul className={css.moviesList}>\n      {movies.length > 0 &&\n        movies.map(({ id, title, poster_path }) => (\n          <li className={css.list} key={id} id={id}>\n            <Link\n              className={css.link}\n              to={{\n                pathname: `/movies/${id}`,\n                state: {\n                  from: {\n                    location,\n                  },\n                },\n              }}\n            >\n              <img\n                className={css.img}\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : noImg\n                }\n                alt=\"poster\"\n                width=\"\"\n                height=\"\"\n              />\n              <p className={css.movieName}>{title}</p>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__Rrjro\",\"searchInput\":\"SearchForm_searchInput__y1z-I\",\"searchButton\":\"SearchForm_searchButton__WNmhq\"};","import React from 'react';\nimport css from './SearchForm.module.css';\n\nexport default function SearchForm({\n  handleSubmit,\n  searchMovie,\n  setSearchMovie,\n}) {\n  return (\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n      <input\n        onChange={e => setSearchMovie(e.target.value)}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        value={searchMovie}\n        className={css.searchInput}\n      />\n      <button className={css.searchButton} type=\"submit\">\n        &#128269;\n      </button>\n    </form>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { searchMovies } from '../../Fetch.jsx';\n//import css from './Movies.module.css';\nimport MovieList from 'components/movieList/MovieList.jsx';\nimport SearchForm from 'components/searchForm/SearchForm.jsx';\n\nexport default function Movies() {\n  const [searchMovie, setSearchMovie] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n  const history = useNavigate();\n\n  useEffect(() => {\n    const searchString = new URLSearchParams(location.search).get('query');\n\n    if (searchString) {\n      const getMovies = async () => {\n        const { results } = await searchMovies(searchString);\n\n        setMovies(results);\n        setSearchMovie(searchString);\n      };\n\n      getMovies();\n    }\n  }, [location.search]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (searchMovie.trim()) {\n      const { results } = await searchMovies(searchMovie);\n\n      setMovies(results);\n      setSearchMovie('');\n\n      if (results.length === 0) {\n        window.alert('We do not have such films');\n      }\n\n      history({\n        ...location,\n        search: `query=${searchMovie}`,\n      });\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <SearchForm\n          handleSubmit={handleSubmit}\n          searchMovie={searchMovie}\n          setSearchMovie={setSearchMovie}\n        />\n      </header>\n      <MovieList movies={movies} location={location} />\n    </>\n  );\n}\n\n// import React, { useState, useEffect } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import { searchMovies } from '../../Fetch.jsx';\n// //import noImg from '..//..//images/No_image.jpg';\n// import css from './Movies.module.css';\n// import MovieList from 'components/movieList/MovieList.jsx';\n\n// export default function Movies() {\n//   const [searchMovie, setSearchMovie] = useState('');\n//   const [movies, setMovies] = useState([]);\n\n//   const location = useLocation();\n//   const history = useNavigate();\n\n//   useEffect(() => {\n//     const searchString = new URLSearchParams(location.search).get('query');\n\n//     if (searchString) {\n//       const getMovies = async () => {\n//         const { results } = await searchMovies(searchString);\n\n//         setMovies(results);\n//         setSearchMovie(searchString);\n//       };\n\n//       getMovies();\n//     }\n//   }, [location.search]);\n\n//   const handleSubmit = async e => {\n//     e.preventDefault();\n\n//     if (searchMovie.trim()) {\n//       const { results } = await searchMovies(searchMovie);\n\n//       setMovies(results);\n//       setSearchMovie('');\n\n//       if (results.length === 0) {\n//         window.alert('We do not have such films');\n//       }\n\n//       history({\n//         ...location,\n//         search: `query=${searchMovie}`,\n//       });\n//     }\n//   };\n\n//   return (\n//     <>\n//       <header>\n//         <form className={css.searchForm} onSubmit={handleSubmit}>\n//           <input\n//             onChange={e => setSearchMovie(e.target.value)}\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search movie\"\n//             value={searchMovie}\n//             className={css.searchInput}\n//           />\n//           <button className={css.searchButton} type=\"submit\">\n//             &#128269;\n//           </button>\n//         </form>\n//       </header>\n//       <MovieList movies={movies} location={location} />\n//     </>\n//   );\n// }\n\n// import { useState, useEffect } from 'react';\n// import { Link, useLocation, useNavigate } from 'react-router-dom';\n// import { searchMovies } from '../../Fetch.jsx';\n// import noImg from '..//..//images/No_image.jpg';\n// import css from './Movies.module.css';\n\n// export default function Movies() {\n// const [searchMovie, setSearchMovie] = useState('');\n// const [movies, setMovies] = useState([]);\n\n// const location = useLocation();\n// const history = useNavigate();\n\n// useEffect(() => {\n//     const searchString = new URLSearchParams(location.search).get('query');\n\n//     if (searchString) {\n//         const getMovies = async () => {\n//             const { results } = await searchMovies(searchString);\n\n//             setMovies(results);\n//             setSearchMovie(searchString);\n\n//         };\n\n//         getMovies();\n//     }\n// }, [location.search]);\n\n// const handleSubmit = async e => {\n//     e.preventDefault();\n\n//     if (searchMovie.trim()) {\n//         const { results } = await searchMovies(searchMovie);\n\n//         setMovies(results);\n//         setSearchMovie('');\n\n//         if (results.length === 0) {\n//             window.alert ('We have not such films');\n//         }\n\n//         history({\n//             ...location,\n//             search: `query=${searchMovie}`,\n//         });\n//     }\n// };\n\n// return (\n//   <>\n//     <header>\n//       <form className={css.searchForm} onSubmit={handleSubmit}>\n//         <input\n//           onChange={e => setSearchMovie(e.target.value)}\n//           type=\"text\"\n//           autoComplete=\"off\"\n//           autoFocus\n//           placeholder=\"Search movie\"\n//           value={searchMovie}\n//           className={css.searchInput}\n//         />\n//         <button className={css.searchButton} type=\"submit\">\n//           &#128269;\n//         </button>\n//       </form>\n//     </header>\n//     <ul className={css.moviesList}>\n//       {movies.length > 0 &&\n//         movies.map(({ id, title, poster_path }) => (\n//           <li className={css.list} key={id} id={id}>\n//             <Link className={css.link}\n//               to={{\n//                 pathname: `/movies/${`${id}`}`,\n//                 state: {\n//                   from: {\n//                     location,\n//                   },\n//                 },\n//               }}\n//             >\n//               <img\n//                 className={css.img}\n//                 src={\n//                   poster_path\n//                     ? `https://image.tmdb.org/t/p/w500${poster_path}`\n//                     : noImg\n//                 }\n//                 alt=\"poster\"\n//                 width=\"\"\n//                 height=\"\"\n//               />\n//               <p className={css.movieName}>{title}</p>\n//             </Link>\n//           </li>\n//         ))}\n//     </ul>\n//   </>\n// );\n// };\n"],"names":["axios","KEY","getTrendingMovies","query","movies","data","searchMovies","searchParam","getMovieDetails","movieId","movie","getMovieCast","getReviews","MovieList","location","className","css","length","map","id","title","poster_path","to","pathname","state","from","src","noImg","alt","width","height","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","SearchForm","handleSubmit","searchMovie","setSearchMovie","onSubmit","onChange","e","type","autoComplete","autoFocus","placeholder","Movies","useState","setMovies","useLocation","history","useNavigate","useEffect","searchString","URLSearchParams","search","get","getMovies","results","preventDefault","trim","window","alert"],"sourceRoot":""}