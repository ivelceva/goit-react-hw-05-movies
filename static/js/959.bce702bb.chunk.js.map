{"version":3,"file":"static/js/959.bce702bb.chunk.js","mappings":"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","sources":["Fetch.jsx","webpack://react-homework-template/./src/components/movieList/MovieList.module.css?db32","components/movieList/MovieList.jsx","webpack://react-homework-template/./src/components/searchForm/SearchForm.module.css?1aef","components/searchForm/SearchForm.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'b889b1f15800992b1379ee4939d9484c';\n\nexport const getTrendingMovies = async () => {\n  const query = `trending/movie/day?api_key=${KEY}`;\n  const { data: movies } = await axios.get(query);\n  return movies;\n};\n\nexport const searchMovies = async searchParam => {\n  const query = `search/movie?api_key=${KEY}&page=1&query=${searchParam}`;\n  const { data: movies } = await axios.get(query);\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const query = `movie/${movieId}$?api_key=${KEY}`;\n  const { data: movie } = await axios.get(query);\n  return movie;\n};\n\nexport const getMovieCast = async movieId => {\n  const query = `movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(query);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const query = `movie/${movieId}/reviews?api_key=${KEY}`;\n  const { data } = await axios.get(query);\n  return data;\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MovieList_moviesList__YUmyH\",\"list\":\"MovieList_list__3qPgi\",\"link\":\"MovieList_link__-y3uU\",\"img\":\"MovieList_img__p2OKV\",\"movieName\":\"MovieList_movieName__m8+kT\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport noImg from '..//..//images/No_image.jpg';\nimport css from './MovieList.module.css';\n\nexport default function MovieList({ movies, location }) {\n  return (\n    <ul className={css.moviesList}>\n      {movies.length > 0 &&\n        movies.map(({ id, title, poster_path }) => (\n          <li className={css.list} key={id} id={id}>\n            <Link\n              className={css.link}\n              to={{\n                pathname: `/movies/${id}`,\n                state: {\n                  from: {\n                    location,\n                  },\n                },\n              }}\n            >\n              <img\n                className={css.img}\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : noImg\n                }\n                alt=\"poster\"\n                width=\"\"\n                height=\"\"\n              />\n              <p className={css.movieName}>{title}</p>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__Rrjro\",\"searchInput\":\"SearchForm_searchInput__y1z-I\",\"searchButton\":\"SearchForm_searchButton__WNmhq\"};","import React from 'react';\nimport css from './SearchForm.module.css';\n\nexport default function SearchForm({\n  handleSubmit,\n  searchMovie,\n  setSearchMovie,\n}) {\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    handleSubmit();\n  };\n\n  return (\n    <form className={css.searchForm} onSubmit={handleFormSubmit}>\n      <input\n        onChange={e => setSearchMovie(e.target.value)}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        value={searchMovie}\n        className={css.searchInput}\n      />\n      <button className={css.searchButton} type=\"submit\">\n        &#128269;\n      </button>\n    </form>\n  );\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { searchMovies } from '../../Fetch.jsx';\nimport MovieList from 'components/movieList/MovieList.jsx';\nimport SearchForm from 'components/searchForm/SearchForm.jsx';\n\nexport default function Movies() {\n  const [searchMovie, setSearchMovie] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const [searchParams] = useSearchParams();\n  const history = useNavigate();\n\n  useEffect(() => {\n    const searchString = searchParams.get('query');\n    if (searchString) {\n      const getMovies = async () => {\n        const { results } = await searchMovies(searchString);\n\n        setMovies(results);\n        setSearchMovie(searchString);\n      };\n\n      getMovies();\n    }\n  }, [searchParams]);\n\n  const handleSubmit = async () => {\n    if (searchMovie.trim()) {\n      const { results } = await searchMovies(searchMovie);\n\n      setMovies(results);\n      setSearchMovie('');\n\n      if (results.length === 0) {\n        window.alert('Sorry, we do not have such movie');\n      }\n\n      history({ search: `query=${searchMovie}` });\n    }\n  };\n\n  return (\n    <>\n      <header>\n        <SearchForm\n          handleSubmit={handleSubmit}\n          searchMovie={searchMovie}\n          setSearchMovie={setSearchMovie}\n        />\n      </header>\n      <MovieList movies={movies} />\n    </>\n  );\n}\n\n"],"names":["axios","KEY","getTrendingMovies","query","movies","data","searchMovies","searchParam","getMovieDetails","movieId","movie","getMovieCast","getReviews","MovieList","location","className","css","length","map","id","title","poster_path","to","pathname","state","from","src","noImg","alt","width","height","SearchForm","handleSubmit","searchMovie","setSearchMovie","onSubmit","e","preventDefault","onChange","target","value","type","autoComplete","autoFocus","placeholder","Movies","useState","setMovies","useSearchParams","searchParams","history","useNavigate","useEffect","searchString","get","getMovies","results","trim","window","alert","search"],"sourceRoot":""}